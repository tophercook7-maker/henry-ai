name: Build and Release Henry AI

on:
  push:
    branches: [ henry-ultimate-transformation, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ henry-ultimate-transformation, main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'aarch64-apple-darwin'
            name: 'macOS-Apple-Silicon'
          - platform: 'macos-latest'
            target: 'x86_64-apple-darwin'
            name: 'macOS-Intel'
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            name: 'Windows-x64'
          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            name: 'Linux-x64'

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install frontend dependencies
        working-directory: apps/web
        run: npm install

      - name: Build Tauri app
        working-directory: apps/web/src-tauri
        run: |
          cargo build --release --target ${{ matrix.target }}
          cargo install tauri-cli --version "^2.0.0"
          cargo tauri build --target ${{ matrix.target }}

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Henry-AI-${{ matrix.name }}
          path: |
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Henry-AI-${{ matrix.name }}
          path: |
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: Henry-AI-${{ matrix.name }}
          path: |
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
            apps/web/src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}